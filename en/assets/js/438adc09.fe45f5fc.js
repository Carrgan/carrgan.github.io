(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[926],{3905:function(n,t,e){"use strict";e.d(t,{Zo:function(){return s},kt:function(){return m}});var r=e(7294);function a(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function c(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function o(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?c(Object(e),!0).forEach((function(t){a(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):c(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function i(n,t){if(null==n)return{};var e,r,a=function(n,t){if(null==n)return{};var e,r,a={},c=Object.keys(n);for(r=0;r<c.length;r++)e=c[r],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(n);for(r=0;r<c.length;r++)e=c[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(a[e]=n[e])}return a}var l=r.createContext({}),p=function(n){var t=r.useContext(l),e=t;return n&&(e="function"==typeof n?n(t):o(o({},t),n)),e},s=function(n){var t=p(n.components);return r.createElement(l.Provider,{value:t},n.children)},u={inlineCode:"code",wrapper:function(n){var t=n.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(n,t){var e=n.components,a=n.mdxType,c=n.originalType,l=n.parentName,s=i(n,["components","mdxType","originalType","parentName"]),d=p(e),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||c;return e?r.createElement(h,o(o({ref:t},s),{},{components:e})):r.createElement(h,o({ref:t},s))}));function m(n,t){var e=arguments,a=t&&t.mdxType;if("string"==typeof n||a){var c=e.length,o=new Array(c);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=n,i.mdxType="string"==typeof n?n:a,o[1]=i;for(var p=2;p<c;p++)o[p]=e[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,e)}d.displayName="MDXCreateElement"},5942:function(n,t,e){"use strict";e.r(t),e.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return s},default:function(){return d}});var r=e(2122),a=e(9756),c=(e(7294),e(3905)),o=["components"],i={sidebar_label:"\u6b63\u5219",title:"\u6b63\u5219",sidebar_position:8},l=void 0,p={unversionedId:"Python/regular",id:"Python/regular",isDocsHomePage:!1,title:"\u6b63\u5219",description:"\u57fa\u7840",source:"@site/notes/Python/regular.md",sourceDirName:"Python",slug:"/Python/regular",permalink:"/en/notes/Python/regular",version:"current",sidebarPosition:8,frontMatter:{sidebar_label:"\u6b63\u5219",title:"\u6b63\u5219",sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"\u8fd0\u7b97\u7b26\u91cd\u8f7d",permalink:"/en/notes/Python/magic-function"},next:{title:"\u4f55\u65f6\u4f7f\u7528Logging",permalink:"/en/notes/Python/logging"}},s=[{value:"\u57fa\u7840",id:"\u57fa\u7840",children:[]},{value:"\u7b80\u5355\u914d\u5bf9",id:"\u7b80\u5355\u914d\u5bf9",children:[]},{value:"\u7528\u6b63\u5219\u5bfb\u627e\u914d\u5bf9",id:"\u7528\u6b63\u5219\u5bfb\u627e\u914d\u5bf9",children:[]},{value:"\u6309\u7c7b\u578b\u5339\u914d",id:"\u6309\u7c7b\u578b\u5339\u914d",children:[]},{value:"\u5982\u679c\u6709\u591a\u884c\u7528<code>^</code>\u6765\u5339\u914d\u4e0d\u80fd\u6210\u529f\u7684\u8bdd",id:"\u5982\u679c\u6709\u591a\u884c\u7528\u6765\u5339\u914d\u4e0d\u80fd\u6210\u529f\u7684\u8bdd",children:[]},{value:"\u91cd\u590d\u5339\u914d",id:"\u91cd\u590d\u5339\u914d",children:[]},{value:"\u5206\u7ec4",id:"\u5206\u7ec4",children:[]},{value:"findall",id:"findall",children:[]},{value:"replace \u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u7ed3\u679c\u8fdb\u884c\u66ff\u6362",id:"replace-\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u7ed3\u679c\u8fdb\u884c\u66ff\u6362",children:[]},{value:"split \u5206\u5272",id:"split-\u5206\u5272",children:[]},{value:"compiled \u5b9a\u4e49\u91cd\u590d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f",id:"compiled-\u5b9a\u4e49\u91cd\u590d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f",children:[]},{value:"\u5c0f\u6284",id:"\u5c0f\u6284",children:[]}],u={toc:s};function d(n){var t=n.components,e=(0,a.Z)(n,o);return(0,c.kt)("wrapper",(0,r.Z)({},u,e,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"\u57fa\u7840"},"\u57fa\u7840"),(0,c.kt)("p",null,"\u7f16\u8bd1\u6b63\u5219\u6210\u6a21\u5f0f\u5bf9\u8c61"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"P = re.compile(\u2018ab*')\nP = re.compile(\u2018ab*\u2019, re.IGNORECASE)        #\u4f20\u5165\u4e00\u4e2a\u53ef\u9009flags\u53c2\u6570\n")),(0,c.kt)("p",null,"\u5e94\u7528\u5339\u914d"),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:null},"\u65b9\u6cd5/\u5c5e\u6027"),(0,c.kt)("th",{parentName:"tr",align:null},"\u76ee\u7684"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"match()"),(0,c.kt)("td",{parentName:"tr",align:null},"\u53ea\u68c0\u67e5\u6b63\u5219\u662f\u5426\u5728\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u5339\u914d")),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"search()"),(0,c.kt)("td",{parentName:"tr",align:null},"\u626b\u63cf\u5b57\u7b26\u4e32\uff0c\u67e5\u627e\u6b21\u6b63\u5219\u5339\u914d\u7684\u4efb\u4f55\u4f4d\u7f6e")),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"findall()"),(0,c.kt)("td",{parentName:"tr",align:null},"\u627e\u5230\u6b63\u5219\u5339\u914d\u7684\u6240\u6709\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u4ed6\u4eec\u4f5c\u4e3a\u5217\u8868\u8fd4\u56de")),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"finiter()"),(0,c.kt)("td",{parentName:"tr",align:null},"\u627e\u5230\u6b63\u5219\u5339\u914d\u7684\u6240\u6709\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u4ed6\u4eec\u8fd4\u56de\u6210Iterator")))),(0,c.kt)("p",null,"\u5339\u914d\u5bf9\u8c61\u83b7\u53d6\u5339\u914d\u5b57\u7b26\u4e32\u4fe1\u606f"),(0,c.kt)("table",null,(0,c.kt)("thead",{parentName:"table"},(0,c.kt)("tr",{parentName:"thead"},(0,c.kt)("th",{parentName:"tr",align:null},"\u65b9\u6cd5 / \u5c5e\u6027"),(0,c.kt)("th",{parentName:"tr",align:null},"\u76ee\u7684"))),(0,c.kt)("tbody",{parentName:"table"},(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"group()"),(0,c.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u6b63\u5219\u5339\u914d\u7684\u5b57\u7b26\u4e32")),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"start()"),(0,c.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u5339\u914d\u7684\u5f00\u59cb\u4f4d\u7f6e")),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"end()"),(0,c.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u5339\u914d\u7684\u7ed3\u675f\u4f4d\u7f6e")),(0,c.kt)("tr",{parentName:"tbody"},(0,c.kt)("td",{parentName:"tr",align:null},"span()"),(0,c.kt)("td",{parentName:"tr",align:null},"\u8fd4\u56de\u5305\u542b\u5339\u914d (start, end) \u4f4d\u7f6e\u7684\u5143\u7ec4")))),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre"},">**I\n>IGNORECASE**\n>\u6267\u884c\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u5339\u914d\uff1b\u5b57\u7b26\u7c7b\u548c\u5b57\u9762\u5b57\u7b26\u4e32\u5c06\u901a\u8fc7\u5ffd\u7565\u5927\u5c0f\u5199\u6765\u5339\u914d\u5b57\u6bcd\u3002 \u4f8b\u5982\uff0c[A-Z] \u4e5f\u5339\u914d\u5c0f\u5199\u5b57\u6bcd\u3002 \u9664\u975e\u4f7f\u7528 ASCII \u6807\u5fd7\u6765\u7981\u7528\u975eASCII\u5339\u914d\uff0c\u5426\u5219\u5b8c\u5168 Unicode \u5339\u914d\u4e5f\u6709\u6548\u3002 \u5f53 Unicode \u6a21\u5f0f [a-z] \u6216 [A-Z] \u4e0e IGNORECASE \u6807\u5fd7\u7ed3\u5408\u4f7f\u7528\u65f6\uff0c\u5b83\u4eec\u5c06\u5339\u914d 52 \u4e2a ASCII \u5b57\u6bcd\u548c 4 \u4e2a\u989d\u5916\u7684\u975e ASCII \u5b57\u6bcd\uff1a'\u0130' (U+0130\uff0c\u62c9\u4e01\u5927\u5199\u5b57\u6bcd I\uff0c\u5e26\u4e0a\u9762\u7684\u70b9)\uff0c'\u0131' (U+0131\uff0c\u62c9\u4e01\u6587\u5c0f\u5199\u5b57\u6bcd\u65e0\u70b9 i)\uff0c's' (U+017F\uff0c\u62c9\u4e01\u6587\u5c0f\u5199\u5b57\u6bcd\u957f s) \u548c'K' (U+212A\uff0c\u5f00\u5c14\u6587\u7b26\u53f7)\u3002 Spam \u5c06\u5339\u914d 'Spam'\uff0c'spam'\uff0c'spAM' \u6216 '\u017fpam' (\u540e\u8005\u4ec5\u5728 Unicode \u6a21\u5f0f\u4e0b\u5339\u914d)\u3002 \u6b64\u5c0f\u5199\u4e0d\u8003\u8651\u5f53\u524d\u533a\u57df\u8bbe\u7f6e\uff1b\u5982\u679c\u4f60\u8fd8\u8bbe\u7f6e\u4e86 LOCALE \u6807\u5fd7\uff0c\u5219\u5c06\u8003\u8651\u3002\n>\n>**L\n>LOCALE**\n>\u4f7f \\w\u3001\\W\u3001\\b\u3001\\B \u548c\u5927\u5c0f\u5199\u654f\u611f\u5339\u914d\u4f9d\u8d56\u4e8e\u5f53\u524d\u533a\u57df\u800c\u4e0d\u662f Unicode \u6570\u636e\u5e93\u3002\n>\n>\u533a\u57df\u8bbe\u7f6e\u662f C \u5e93\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u65e8\u5728\u5e2e\u52a9\u7f16\u5199\u8003\u8651\u5230\u8bed\u8a00\u5dee\u5f02\u7684\u7a0b\u5e8f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u6b63\u5728\u5904\u7406\u7f16\u7801\u7684\u6cd5\u8bed\u6587\u672c\uff0c\u90a3\u4e48\u4f60\u5e0c\u671b\u80fd\u591f\u7f16\u5199 \\w+ \u6765\u5339\u914d\u5355\u8bcd\uff0c\u4f46 \\w \u53ea\u5339\u914d\u5b57\u7b26\u7c7b [A-Za-z] \u5b57\u8282\u6a21\u5f0f\uff1b\u5b83\u4e0d\u4f1a\u5339\u914d\u5bf9\u5e94\u4e8e \xe9 \u6216 \xe7 \u7684\u5b57\u8282\u3002\u5982\u679c\u4f60\u7684\u7cfb\u7edf\u914d\u7f6e\u6b63\u786e\u5e76\u4e14\u9009\u62e9\u4e86\u6cd5\u8bed\u533a\u57df\u8bbe\u7f6e\uff0c\u67d0\u4e9bC\u51fd\u6570\u5c06\u544a\u8bc9\u7a0b\u5e8f\u5bf9\u5e94\u4e8e \xe9 \u7684\u5b57\u8282\u4e5f\u5e94\u8be5\u88ab\u89c6\u4e3a\u5b57\u6bcd\u3002\u5728\u7f16\u8bd1\u6b63\u5219\u8868\u8fbe\u5f0f\u65f6\u8bbe\u7f6e LOCALE \u6807\u5fd7\u5c06\u5bfc\u81f4\u751f\u6210\u7684\u7f16\u8bd1\u5bf9\u8c61\u5c06\u8fd9\u4e9bC\u51fd\u6570\u7528\u4e8e \\w\uff1b\u8fd9\u6bd4\u8f83\u6162\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4f7f \\w+ \u5339\u914d\u4f60\u6240\u671f\u671b\u7684\u6cd5\u8bed\u5355\u8bcd\u3002\u5728 Python 3 \u4e2d\u4e0d\u9f13\u52b1\u4f7f\u7528\u6b64\u6807\u5fd7\uff0c\u56e0\u4e3a\u8bed\u8a00\u73af\u5883\u673a\u5236\u975e\u5e38\u4e0d\u53ef\u9760\uff0c\u5b83\u4e00\u6b21\u53ea\u5904\u7406\u4e00\u4e2a\u201c\u6587\u5316\u201d\uff0c\u5b83\u53ea\u9002\u7528\u4e8e 8 \u4f4d\u8bed\u8a00\u73af\u5883\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cPython 3 \u4e2d\u5df2\u7ecf\u4e3a Unicode\uff08str\uff09\u6a21\u5f0f\u542f\u7528\u4e86 Unicode \u5339\u914d\uff0c\u5e76\u4e14\u5b83\u80fd\u591f\u5904\u7406\u4e0d\u540c\u7684\u533a\u57df/\u8bed\u8a00\u3002\n>\n>**M\n>MULTILINE**\n>(^ \u548c $ \u8fd8\u6ca1\u6709\u89e3\u91ca\uff1b\u5b83\u4eec\u5c06\u5728\u4ee5\u4e0b\u90e8\u5206\u4ecb\u7ecd \u66f4\u591a\u5143\u5b57\u7b26\u3002)\n>\n>\u901a\u5e38 ^ \u53ea\u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f00\u5934\uff0c\u800c $ \u53ea\u5339\u914d\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\uff0c\u7d27\u63a5\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u6362\u884c\u7b26\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u4e4b\u524d\u3002 \u5f53\u6307\u5b9a\u4e86\u8fd9\u4e2a\u6807\u5fd7\u65f6\uff0c^ \u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f00\u5934\u548c\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e00\u884c\u7684\u5f00\u5934\uff0c\u7d27\u8ddf\u5728\u6bcf\u4e2a\u6362\u884c\u7b26\u4e4b\u540e\u3002 \u7c7b\u4f3c\u5730\uff0c$ \u5143\u5b57\u7b26\u5339\u914d\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u548c\u6bcf\u884c\u7684\u7ed3\u5c3e\uff08\u7d27\u63a5\u5728\u6bcf\u4e2a\u6362\u884c\u7b26\u4e4b\u524d\uff09\u3002\n>\n>**S\n>DOTALL**\n>\u4f7f '.' \u7279\u6b8a\u5b57\u7b26\u5339\u914d\u4efb\u4f55\u5b57\u7b26\uff0c\u5305\u62ec\u6362\u884c\u7b26\uff1b\u6ca1\u6709\u8fd9\u4e2a\u6807\u5fd7\uff0c'.' \u5c06\u5339\u914d\u4efb\u4f55\u5b57\u7b26 \u9664\u4e86 \u6362\u884c\u7b26\u3002\n>\n>**A\n>ASCII**\n>\u4f7f \\w\u3001\\W\u3001\\b\u3001\\B\u3001\\s \u548c \\S \u6267\u884c\u4ec5 ASCII \u5339\u914d\u800c\u4e0d\u662f\u5b8c\u6574\u5339\u914d Unicode \u5339\u914d\u3002 \u8fd9\u4ec5\u5bf9 Unicode \u6a21\u5f0f\u6709\u610f\u4e49\uff0c\u5e76\u4e14\u5bf9\u4e8e\u5b57\u8282\u6a21\u5f0f\u5c06\u88ab\u5ffd\u7565\u3002\n>\n>**X\n>VERBOSE**\n>\u6b64\u6807\u5fd7\u5141\u8bb8\u4f60\u7f16\u5199\u66f4\u6613\u8bfb\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u65b9\u6cd5\u662f\u4e3a\u60a8\u63d0\u4f9b\u66f4\u7075\u6d3b\u7684\u683c\u5f0f\u5316\u65b9\u5f0f\u3002 \u6307\u5b9a\u6b64\u6807\u5fd7\u540e\uff0c\u5c06\u5ffd\u7565\u6b63\u5219\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c\uff0c\u9664\u975e\u7a7a\u683c\u4f4d\u4e8e\u5b57\u7b26\u7c7b\u4e2d\u6216\u524d\u9762\u5e26\u6709\u672a\u8f6c\u4e49\u7684\u53cd\u659c\u6760\uff1b\u8fd9\u4f7f\u4f60\u53ef\u4ee5\u66f4\u6e05\u695a\u5730\u7ec4\u7ec7\u548c\u7f29\u8fdb\u6b63\u5219\u3002 \u6b64\u6807\u5fd7\u8fd8\u5141\u8bb8\u4f60\u5c06\u6ce8\u91ca\u653e\u5728\u6b63\u5219\u4e2d\uff0c\u5f15\u64ce\u5c06\u5ffd\u7565\u8be5\u6ce8\u91ca\uff1b\u6ce8\u91ca\u6807\u8bb0\u4e3a '#' \u65e2\u4e0d\u662f\u5728\u5b57\u7b26\u7c7b\u4e2d\uff0c\u4e5f\u4e0d\u662f\u5728\u672a\u8f6c\u4e49\u7684\u53cd\u659c\u6760\u4e4b\u524d\u3002\n\n(?P=name)\n\n")),(0,c.kt)("h2",{id:"\u7b80\u5355\u914d\u5bf9"},"\u7b80\u5355\u914d\u5bf9"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"import re\n# matching string\npattern1 = 'cat'\npattern2 = 'bird'\nstring = 'dog runs to cat'\nprint(pattern1 in string)\nprint(pattern2 in string)\n")),(0,c.kt)("p",null,"True\nFalse"),(0,c.kt)("h2",{id:"\u7528\u6b63\u5219\u5bfb\u627e\u914d\u5bf9"},"\u7528\u6b63\u5219\u5bfb\u627e\u914d\u5bf9"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python",metastring:'title="regular expression"',title:'"regular','expression"':!0},'pattern1 = "cat"\npattern2 = "bird"\nstring = "dog runs to cat"\nprint(re.search(pattern1, string))  # <_sre.SRE_Match object; span=(12, 15), match=\'cat\'>\nprint(re.search(pattern2, string))  # None\n')),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python",metastring:"title=\"multiple patterns ('run' or 'ran')\"",title:'"multiple',patterns:!0,"('run'":!0,or:!0,"'ran')\"":!0},'\nptn = r"r[au]n"       # start with "r" means raw string\nprint(re.search(ptn, "dog runs to cat"))    # <_sre.SRE_Match object; span=(4, 7), match=\'run\'>\nprint(re.search(r"r[A-Z]n", "dog runs to cat"))     # None \u6ca1\u6709\u5927\u5199\nprint(re.search(r"r[a-z]n", "dog runs to cat"))     # <_sre.SRE_Match object; span=(4, 7), match=\'run\'>\nprint(re.search(r"r[0-9]n", "dog r2ns to cat"))     # <_sre.SRE_Match object; span=(4, 7), match=\'r2n\'>\nprint(re.search(r"r[0-9a-z]n", "dog runs to cat"))  # <_sre.SRE_Match object; span=(4, 7), match=\'run\'>\n')),(0,c.kt)("h2",{id:"\u6309\u7c7b\u578b\u5339\u914d"},"\u6309\u7c7b\u578b\u5339\u914d"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},'# \\d : decimal digit\nprint(re.search(r"r\\dn", "run r4n"))           # <_sre.SRE_Match object; span=(4, 7), match=\'r4n\'>\n# \\D : any non-decimal digit\nprint(re.search(r"r\\Dn", "run r4n"))           # <_sre.SRE_Match object; span=(0, 3), match=\'run\'>\n# \\s : any white space [\\t\\n\\r\\f\\v]\nprint(re.search(r"r\\sn", "r\\nn r4n"))          # <_sre.SRE_Match object; span=(0, 3), match=\'r\\nn\'>\n# \\S : opposite to \\s, any non-white space\nprint(re.search(r"r\\Sn", "r\\nn r4n"))          # <_sre.SRE_Match object; span=(4, 7), match=\'r4n\'>\n# \\w : [a-zA-Z0-9_]\nprint(re.search(r"r\\wn", "r\\nn r4n"))          # <_sre.SRE_Match object; span=(4, 7), match=\'r4n\'>\n# \\W : opposite to \\w\nprint(re.search(r"r\\Wn", "r\\nn r4n"))          # <_sre.SRE_Match object; span=(0, 3), match=\'r\\nn\'>\n# \\b : empty string (only at the start or end of the word)\nprint(re.search(r"\\bruns\\b", "dog runs to cat"))    # <_sre.SRE_Match object; span=(4, 8), match=\'runs\'>\n# \\B : empty string (but not at the start or end of a word)\nprint(re.search(r"\\B runs \\B", "dog   runs  to cat"))  # <_sre.SRE_Match object; span=(8, 14), match=\' runs \'>\n# \\\\ : match \\\nprint(re.search(r"runs\\\\", "runs\\ to me"))     # <_sre.SRE_Match object; span=(0, 5), match=\'runs\\\\\'>\n# . : match anything (except \\n)\nprint(re.search(r"r.n", "r[ns to me"))         # <_sre.SRE_Match object; span=(0, 3), match=\'r[n\'>\n# ^ : match line beginning\nprint(re.search(r"^dog", "dog runs to cat"))   # <_sre.SRE_Match object; span=(0, 3), match=\'dog\'>\n# $ : match line ending\nprint(re.search(r"cat$", "dog runs to cat"))   # <_sre.SRE_Match object; span=(12, 15), match=\'cat\'>\n# ? : may or may not occur\nprint(re.search(r"Mon(day)?", "Monday"))       # <_sre.SRE_Match object; span=(0, 6), match=\'Monday\'>\nprint(re.search(r"Mon(day)?", "Mon"))          # <_sre.SRE_Match object; span=\n')),(0,c.kt)("h2",{id:"\u5982\u679c\u6709\u591a\u884c\u7528\u6765\u5339\u914d\u4e0d\u80fd\u6210\u529f\u7684\u8bdd"},"\u5982\u679c\u6709\u591a\u884c\u7528",(0,c.kt)("inlineCode",{parentName:"h2"},"^"),"\u6765\u5339\u914d\u4e0d\u80fd\u6210\u529f\u7684\u8bdd"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},'string = """\ndog runs to cat.\nI run to dog.\n"""\nprint(re.search(r"^I", string))                 # None\nprint(re.search(r"^I", string, flags=re.M))     # <_sre.SRE_Match object; span=(18, 19), match=\'I\'>\n')),(0,c.kt)("h2",{id:"\u91cd\u590d\u5339\u914d"},"\u91cd\u590d\u5339\u914d"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},'# * : occur 0 or more times\nprint(re.search(r"ab*", "a"))             # <_sre.SRE_Match object; span=(0, 1), match=\'a\'>\nprint(re.search(r"ab*", "abbbbb"))        # <_sre.SRE_Match object; span=(0, 6), match=\'abbbbb\'>\n\n# + : occur 1 or more times\nprint(re.search(r"ab+", "a"))             # None\nprint(re.search(r"ab+", "abbbbb"))        # <_sre.SRE_Match object; span=(0, 6), match=\'abbbbb\'>\n\n# {n, m} : occur n to m times\nprint(re.search(r"ab{2,10}", "a"))        # None\nprint(re.search(r"ab{2,10}", "abbbbb"))   # <_sre.SRE_Match object; span=(0, 6), match=\'abbbbb\'>\n')),(0,c.kt)("h2",{id:"\u5206\u7ec4"},"\u5206\u7ec4"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},'match = re.search(r"(\\d+), Date: (.+)", "ID: 021523, Date: Feb/12/2017")\nprint(match.group())                   # 021523, Date: Feb/12/2017\nprint(match.group(1))                  # 021523\nprint(match.group(2))                  # Date: Feb/12/2017\n# \u547d\u540d\u7ec4\nmatch = re.search(r"(?P<id>\\d+), Date: (?P<date>.+)", "ID: 021523, Date: Feb/12/2017")\nprint(match.group(\'id\'))                # 021523\nprint(match.group(\'date\'))              # Date: Feb/12/2017\n')),(0,c.kt)("h2",{id:"findall"},"findall"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"# findall\nprint(re.findall(r\"r[ua]n\", \"run ran ren\"))    # ['run', 'ran']\n\n# | : or\nprint(re.findall(r\"(run|ran)\", \"run ran ren\")) # ['run', 'ran']\n")),(0,c.kt)("h2",{id:"replace-\u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u7ed3\u679c\u8fdb\u884c\u66ff\u6362"},"replace \u5bf9\u6b63\u5219\u8868\u8fbe\u5f0f\u7ed3\u679c\u8fdb\u884c\u66ff\u6362"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},'print(re.sub(r"r[au]ns", "catches", "dog runs to cat"))     # dog catches to cat\n')),(0,c.kt)("h2",{id:"split-\u5206\u5272"},"split \u5206\u5272"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"print(re.split(r\"[,;\\.]\", \"a;b,c.d;e\"))             # ['a', 'b', 'c', 'd', 'e']\n")),(0,c.kt)("h2",{id:"compiled-\u5b9a\u4e49\u91cd\u590d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f"},"compiled \u5b9a\u4e49\u91cd\u590d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},'compiled_re = re.compile(r"r[ua]n")\nprint(compiled_re.search("dog ran to cat"))  # <_sre.SRE_Match object; span=(4, 7), match=\'ran\'>\n')),(0,c.kt)("h2",{id:"\u5c0f\u6284"},"\u5c0f\u6284"))}d.isMDXComponent=!0}}]);