(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[316],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return k},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),m=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},k=function(e){var t=m(e.components);return a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,k=p(e,["components","mdxType","originalType","parentName"]),d=m(n),u=r,N=d["".concat(o,".").concat(u)]||d[u]||s[u]||i;return n?a.createElement(N,l(l({ref:t},k),{},{components:n})):a.createElement(N,l({ref:t},k))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var m=2;m<i;m++)l[m]=n[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3609:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return m},toc:function(){return k},default:function(){return d}});var a=n(2122),r=n(9756),i=(n(7294),n(3905)),l=["components"],p={},o="Redis",m={unversionedId:"Database/redis",id:"Database/redis",isDocsHomePage:!1,title:"Redis",description:"Start Server",source:"@site/notes/Database/redis.md",sourceDirName:"Database",slug:"/Database/redis",permalink:"/en/notes/Database/redis",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MongoDB",permalink:"/en/notes/Database/MongoDB"},next:{title:"git\u547d\u4ee4\u901f\u67e5",permalink:"/en/notes/git-command"}},k=[{value:"Start Server",id:"start-server",children:[]},{value:"keys",id:"keys",children:[]},{value:"String",id:"string",children:[]},{value:"list",id:"list",children:[]},{value:"Set",id:"set",children:[]}],s={toc:k};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"redis"},"Redis"),(0,i.kt)("h2",{id:"start-server"},"Start Server"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Find redis server\n",(0,i.kt)("inlineCode",{parentName:"p"},"where redis-server"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Start Server"),(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"./redis-server &")))),(0,i.kt)("h2",{id:"keys"},"keys"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u67e5\u770b\u6240\u6709\u4ef6\n",(0,i.kt)("inlineCode",{parentName:"li"},"keys *")),(0,i.kt)("li",{parentName:"ol"},"\u5220\u9664key\n",(0,i.kt)("inlineCode",{parentName:"li"},"del [key]"))),(0,i.kt)("h2",{id:"string"},"String"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"insert String\n",(0,i.kt)("inlineCode",{parentName:"p"},"set [key] [value]\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"get String\n",(0,i.kt)("inlineCode",{parentName:"p"},"get [key]\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Set expiration time\n",(0,i.kt)("inlineCode",{parentName:"p"},"set [key] [value] EX [timeout/s]\nset [key] [timeout/s] [value]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Show expiration time\n",(0,i.kt)("inlineCode",{parentName:"p"},"ttl [ket]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Rework expiration time\n",(0,i.kt)("inlineCode",{parentName:"p"},"expire [key] [timeout/s]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Show all keys\n",(0,i.kt)("inlineCode",{parentName:"p"},"keys *\n")))),(0,i.kt)("h2",{id:"list"},"list"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add element to the left of the list\n",(0,i.kt)("inlineCode",{parentName:"p"},"lpush [key] [value]")),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"Insert the value into the header of the list 'key', if key does not exist, an empty list will be created and the ",(0,i.kt)("inlineCode",{parentName:"p"},"lpush")," will be performed. When key exist but is not a list type, an error returned.  "))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add element to the right of the list\n",(0,i.kt)("inlineCode",{parentName:"p"},"rpush [key] [value]")),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"Insert the value into the tail of the list 'key', if key does not exist,\nan empty list will be created and the ",(0,i.kt)("inlineCode",{parentName:"p"},"rpush")," will be performed, When key exist but is not a list type, an error returned."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Show element of the list\n",(0,i.kt)("inlineCode",{parentName:"p"},"lrange [key] [start] [stop]")),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"starting from 0 and ending with -1"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Pop elements of the list\n",(0,i.kt)("inlineCode",{parentName:"p"},"rpop [key]")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"rpop [key]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Delete element of the list\n",(0,i.kt)("inlineCode",{parentName:"p"},"lrem [key] [count] [value]")),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("ul",{parentName:"blockquote"},(0,i.kt)("li",{parentName:"ul"},"count > 0: Start form the head to the end of the table, remove the elements equal to 'value', the number of 'count'."),(0,i.kt)("li",{parentName:"ul"},"count < 0: Start from the end to the head of the table, remove the elements equal to 'value', the number if 'count'."),(0,i.kt)("li",{parentName:"ul"},"count = 0, Remove all values equal to 'value' from the table.")))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Capped lists\n",(0,i.kt)("inlineCode",{parentName:"p"},"ltrim [key] [start] [end]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Index element of the list\n",(0,i.kt)("inlineCode",{parentName:"p"},"lindex [key] [index]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Get the number if elements in  the list\n",(0,i.kt)("inlineCode",{parentName:"p"},"llen [key]")))),(0,i.kt)("h2",{id:"set"},"Set"),(0,i.kt)("p",null,"No duplicate objects"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add members of the Set\n",(0,i.kt)("inlineCode",{parentName:"p"},"sadd [set] [value]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Show members of the Set\n",(0,i.kt)("inlineCode",{parentName:"p"},"smembers [set]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Remove members of the Set\n",(0,i.kt)("inlineCode",{parentName:"p"},"scrm set [member]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Show All members of the Set\n",(0,i.kt)("inlineCode",{parentName:"p"},"scard set"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Intersection\n",(0,i.kt)("inlineCode",{parentName:"p"},"sinter [set1] [set2]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Union\n",(0,i.kt)("inlineCode",{parentName:"p"},"sunion [set1] [set2]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Complement\n",(0,i.kt)("inlineCode",{parentName:"p"},"sdiff [set1] [set2]")))),(0,i.kt)("h1",{id:"sorted-set"},"Sorted Set"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"insert\n",(0,i.kt)("inlineCode",{parentName:"p"},"zadd [key] [num]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u5220\u9664\u5e76\u8fd4\u56de\u6392\u5e8f\u96c6\u4e2d\u5f97\u5206\u6700\u9ad8\u7684\u6210\u5458\n",(0,i.kt)("inlineCode",{parentName:"p"},"zpopmax [key] [count]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u5220\u9664\u5e76\u8fd4\u56de\u6392\u5e8f\u96c6\u4e2d\u5f97\u5206\u6700\u4f4e\u7684\u6210\u5458\n",(0,i.kt)("inlineCode",{parentName:"p"},"zpopmin [key] [count]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u83b7\u53d6\u5e8f\u5217\u4e2d\u7684\u6210\u5458\u4e66\n",(0,i.kt)("inlineCode",{parentName:"p"},"zcard [key]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u5728\u7ed9\u5b9a\u503c\u5185\u7684\u5206\u6570\u4e2d\u5bf9\u6392\u5e8f\u96c6\u4e2d\u7684\u6210\u5458\u8fdb\u884c\u8ba1\u6570\n",(0,i.kt)("inlineCode",{parentName:"p"},"zcount [key] [min] [max]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u53d6\u51fa\u6392\u5e8f\u7684\u51e0\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"("),"\u662f\u5305\u542b\n",(0,i.kt)("inlineCode",{parentName:"p"},"zrangebyscore test (99 100 limit 0 100")))),(0,i.kt)("h1",{id:"hash"},"Hash"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add a new values\n",(0,i.kt)("inlineCode",{parentName:"p"},"hset [key] [field] [value]")),(0,i.kt)("blockquote",{parentName:"li"},(0,i.kt)("p",{parentName:"blockquote"},"\u5c06\u54c8\u5e0c\u8868 key \u4e2d\u7684\u57df field \u7684\u503c\u8bbe\u4e3a value\n\u5982\u679c key \u4e0d\u5b58\u5728\uff0c\u4e00\u4e2a\u65b0\u7684\u54c8\u5e0c\u8868\u88ab\u521b\u5efa\u5e76\u8fdb\u884c HSET \u64cd\u4f5c\u3002\u5982\u679c\u57df f1e1d \u5df2\u7ecf\u5b58\u5728\u4e8e\u54c8\u5e0c\u8868\u4e2d\uff0c\u65e7\u503c\n\u5c06\u88ab\u8986\u76d6\u3002"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u83b7\u53d6\u54c8\u5e0c\u4e2d\u7684 field \u5bf9\u5e94\u7684\u503c\n",(0,i.kt)("inlineCode",{parentName:"p"},"hget [key] [field]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u5220\u9664 Field \u4e2d\u7684\u67d0\u4e2a field:\n",(0,i.kt)("inlineCode",{parentName:"p"},"hdel  [key] [field]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u83b7\u53d6\u67d0\u4e2a\u54c8\u5e0c\u4e2d\u6240\u6709\u7684 field \u548c value:\n",(0,i.kt)("inlineCode",{parentName:"p"},"hgetall [key]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u83b7\u53d6\u67d0\u4e2a\u54c8\u5e0c\u4e2d\u6240\u6709\u7684 field:\n",(0,i.kt)("inlineCode",{parentName:"p"},"hkeys [key]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u83b7\u53d6\u67d0\u4e2a\u54c8\u5e0c\u4e2d\u6240\u6709\u7684\u503c:\n",(0,i.kt)("inlineCode",{parentName:"p"},"hvals [key]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u5224\u65ad\u54c8\u5e0c\u4e2d\u662f\u5426\u5b58\u5728\u67d0\u4e2afield:\n",(0,i.kt)("inlineCode",{parentName:"p"},"hexists [key] [field]"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"\u83b7\u53d6\u54c8\u5e0c\u4e2d\u603b\u5171\u7684\u952e\u503c\u5bf9:\n",(0,i.kt)("inlineCode",{parentName:"p"},"hlen [field]")))))}d.isMDXComponent=!0}}]);